{"version":3,"sources":["../../src/parsers/html.js"],"names":[],"mappings":"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","file":"html.js","sourcesContent":["\r\nvar utils = require(\"../utils/utils\");\r\nvar cheerio = require('cheerio');\r\nvar _ = require('underscore')._;\r\nvar db = require(\"../lib/database\");\r\n\r\nlet instance = null;\r\n\r\nclass Html {\r\n        constructor() {\r\n                if (!instance) {\r\n                        instance = this;\r\n                }\r\n\r\n                return instance;\r\n        }\r\n\r\n\r\n        find_html_elements(result) {\r\n                return new Promise(\r\n                        function (resolve, reject) {\r\n                                let parent = result[0];\r\n                                let $ = result[1];\r\n\r\n\r\n                                _.each($.root(), function (elem) {\r\n                                        instance.recursive_element($, elem, null, parent);\r\n                                });\r\n\r\n                                resolve();\r\n\r\n                        });\r\n        }\r\n        recursive_element($, elem, parent, parent_file) {\r\n\r\n                let tag = $(elem).get(0).tagName;\r\n                let value;\r\n                let name = \"\";\r\n                let type = tag;\r\n                let current = parent_file.key;\r\n                if (parent !== null) {\r\n                        current = parent.key;\r\n                }\r\n\r\n                if (tag === \"script\") {\r\n                        if ($(elem).attr(\"src\") !== undefined) {\r\n                                let correctedPath = utils.correctPathSync($(elem).attr(\"src\"), parent_file.name, \".js\");\r\n                                let candidate = _.findWhere(db.getIdentifiedFiles(), { name: correctedPath });\r\n                                if (candidate !== undefined) {\r\n                                        db.addRelations({ from: parent_file.key, to: candidate.id, relationship: \"\", cluster: true });\r\n                                }\r\n                        }\r\n                }\r\n\r\n\r\n                if (tag === \"link\") {\r\n                        if ($(elem).attr(\"href\") !== undefined) {\r\n                                let correctedPath = utils.correctPathSync($(elem).attr(\"href\"), parent_file.name);\r\n\r\n                                let candidate = _.findWhere(db.getIdentifiedFiles(), { name: correctedPath });\r\n                                if (candidate !== undefined) {\r\n                                        db.addRelations({ from: parent_file.key, to: candidate.id, relationship: \"\", cluster: true });\r\n                                }\r\n                        }\r\n                }\r\n\r\n                if ($(elem).children().length === 0) {\r\n                        name = tag;\r\n\r\n                        if ($(elem).attr(\"id\") !== undefined) {\r\n                                name = $(elem).attr(\"id\");\r\n                        }\r\n\r\n                        if (_.contains(['link', 'a', 'ddd'], tag)) {\r\n                                value = $(elem).attr(\"href\")\r\n                        }\r\n\r\n                        if (tag === \"script\") {\r\n                                value = $(elem).attr(\"src\")\r\n                        }\r\n\r\n                        if (tag === \"a\") {\r\n                                name = \"link\"\r\n                        }\r\n\r\n                        db.addProperty(current, { name: name, value: value, type: type, visibility: \"+\" });\r\n                }\r\n                else {\r\n                        let classId = db.addClass({ name: name, fill: \"pink\", type: type, file: parent_file.name, cluster: parent_file.cluster });\r\n                        db.addRelations({ from: current, to: classId, relationship: \"composition\" });\r\n                        current = classId;\r\n                        parent = db.getClass(classId);\r\n                }\r\n\r\n                if ($(elem).children().length > 0) {\r\n                        _.each($(elem).children(), function (child) {\r\n                                instance.recursive_element($, child, parent, parent_file);\r\n                        });\r\n\r\n                }\r\n\r\n        }\r\n        operation_html(file) {\r\n                return new Promise(\r\n                        function (resolve, reject) {\r\n                                Promise.resolve(file)\r\n                                        .then(utils.read_node)\r\n                                        .then(instance.parse_dom)\r\n                                        .then(instance.find_html_elements)\r\n                                        .catch(error => { console.log(\"err\", error); })\r\n                                        .then(function () {\r\n                                                resolve();\r\n                                        });\r\n\r\n                        });\r\n        }\r\n        parse_dom(result) {\r\n                return new Promise(\r\n                        function (resolve, reject) {\r\n                                let node = result[0];\r\n                                let data = result[1];\r\n                                let $ = cheerio.load(data);\r\n                                resolve([node, $]);\r\n\r\n                        });\r\n        }\r\n\r\n}\r\n\r\nmodule.exports = new Html();"]}