{"version":3,"sources":["../../../src/parsers/javascript/initStatement.js"],"names":[],"mappings":"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","file":"initStatement.js","sourcesContent":["var _ = require('underscore')._;\nmodule.exports = {\n\n        parse: function (node) {\n\n                var newNode = { name: \"\", type: \"\", value: \"\", visibility: \"-\", kind: \"property\" };\n\n\n\n                if (node.id.type === \"Identifier\") {\n                        newNode.name = node.id.name;\n                }\n                if (node.init !== null) {\n                        switch (node.init.type) {\n                                case \"FunctionExpression\":\n                                        newNode.group = \"js-function\";\n                                        break;\n                                case \"ObjectExpression\":\n                                        newNode.group = \"js-object\";\n                                        newNode.rawType = \"object\"\n                                        break;\n                                case \"MemberExpression\":\n                                        newNode.group = \"js-object\";\n                                        if (node.right && node.right.callee) {\n                                                if (node.right.callee.type === \"Identifier\" && node.right.callee.name === \"Array\") {\n                                                        newNode.group = \"js-array\";\n                                                        newNode.rawType = \"array\"\n                                                } else if (node.right.callee.type === \"Identifier\" && node.right.callee.name === \"String\") {\n                                                        newNode.group = \"js-variable\";\n                                                        newNode.rawType = \"string\"\n                                                } else if (node.right.callee.type === \"Identifier\" && node.right.callee.name === \"Number\") {\n                                                        newNode.group = \"js-variable\";\n                                                        newNode.rawType = \"number\"\n                                                } else if (node.right.callee.type === \"Identifier\" && node.right.callee.name === \"Boolean\") {\n                                                        newNode.group = \"js-variable\";\n                                                        newNode.rawType = \"boolean\"\n                                                }\n                                        }\n                                        break;\n                                case \"ArrayExpression\":\n                                        newNode.group = \"js-array\";\n                                        break;\n                                case \"NewExpression\":\n                                        newNode.group = \"js-function\";\n                                        newNode.name = node.name;\n                                        if (_.isUndefined(node.init.callee.name) || node.init.callee.name === null) {\n                                                newNode.group = \"unknown\"\n                                        }\n                                        newNode.newExp = node.init.callee.name;\n                                        if (node.init.callee.type === \"Identifier\" && node.init.callee.name === \"Array\") {\n                                                newNode.group = \"js-array\";\n                                                newNode.rawType = \"array\"\n                                        } else if (node.init.callee.type === \"Identifier\" && node.init.callee.name === \"String\") {\n                                                newNode.group = \"js-variable\";\n                                                newNode.rawType = \"string\"\n                                        } else if (node.init.callee.type === \"Identifier\" && node.init.callee.name === \"Number\") {\n                                                newNode.group = \"js-variable\";\n                                                newNode.rawType = \"number\"\n                                        } else if (node.init.callee.type === \"Identifier\" && node.init.callee.name === \"Boolean\") {\n                                                newNode.group = \"js-variable\";\n                                                newNode.rawType = \"boolean\"\n                                        }\n                                        break;\n                                case \"Literal\":\n                                        newNode.group = \"js-variable\";\n                                        newNode.rawType = typeof node.init.value;\n                                        if (node.init.value === null) {\n                                                newNode.rawType = \"null\"\n                                        }\n                                        if (typeof node.init.value === \"object\") {\n                                                // newNode.value = undefined\n                                        } else {\n                                                newNode.value = node.init.value\n                                        }\n                                        break;\n                                case \"Identifier\":\n                                        newNode.group = \"js-variable\";\n                                        newNode.value = node.init.name;\n                                        break;\n                                default:\n                                        newNode.group = \"js-variable\"\n                        }\n                }\n                if (node.init === null || _.isUndefined(node.init)) {\n                        newNode.value = \"undefined\"\n                } else if (!_.isUndefined(node.init.arguments)) {\n                        var rawValue = [];\n                        _.each(node.init.arguments, function (args) {\n                                if (!_.isUndefined(args.name) && args.name !== \"\") {\n                                        rawValue.push(args.name)\n                                } else if (!_.isUndefined(args.value) && args.value !== \"\") {\n                                        rawValue.push(args.value)\n                                }\n                        });\n                        if (rawValue.length > 0) {\n                                newNode.value = rawValue.join(\", \")\n                        } else {\n                                newNode.value = \"\"\n                        }\n                } else if (!_.isUndefined(node.init.params)) {\n                        var rawValue = [];\n                        _.each(node.init.params, function (args) {\n                                if (!_.isUndefined(args.name) && args.name !== \"\") {\n                                        rawValue.push(args.name)\n                                } else if (!_.isUndefined(args.value) && args.value !== \"\") {\n                                        rawValue.push(args.value)\n                                }\n                        });\n                        if (rawValue.length > 0) {\n                                newNode.value = rawValue.join(\", \")\n                        } else {\n                                newNode.value = \"\"\n                        }\n                }\n\n\n\n\n\n\n\n\n\n                if (newNode.group === \"js-variable\") {\n                        if (newNode.type === \"\") {\n                                newNode.type = \"variable\"\n                        }\n                }\n\n\n                if (newNode.group === \"js-object\") {\n                        newNode.type = \"object\";\n                }\n\n\n                if (newNode.group === \"js-array\") {\n                        newNode.type = \"array\"\n                }\n\n                if (newNode.group === \"js-function\") {\n                        newNode.kind = \"method\"\n\n                }\n\n\n                newNode.type = newNode.type.toLowerCase();\n\n\n                return newNode;\n\n\n\n\n\n\n\n\n\n\n        }\n\n\n\n}"]}