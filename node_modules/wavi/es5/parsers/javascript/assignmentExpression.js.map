{"version":3,"sources":["../../../src/parsers/javascript/assignmentExpression.js"],"names":[],"mappings":"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","file":"assignmentExpression.js","sourcesContent":["var parsersHelper = require(\"../../utils/parsersHelper\");\r\nvar _ = require('underscore')._;\r\nmodule.exports = {\r\n\r\n        parse: function (node) {\r\n\r\n                var newNode = { name: \"\", type: \"\", value: \"\", visibility: \"-\", kind: \"property\" };\r\n\r\n                var LeftName = \"\";\r\n                var RightName = \"\";\r\n                if (node.left.type === \"MemberExpression\") {\r\n                        var LeftName = parsersHelper.getLeftName(node.left);\r\n                        if (node.left.object && node.left.object.type === \"Identifier\" && node.left.object.name === \"exports\") {\r\n                                var tempName = LeftName.split(\".\");\r\n                                tempName.shift();\r\n                                LeftName = tempName.join(\".\");\r\n                                newNode.visibility = \"+\"\r\n                        }\r\n                        if (node.left.object.type === \"Identifier\" && node.left.object.name === \"module\" && node.left.property.type === \"Identifier\" && node.left.property.name === \"exports\") {\r\n                                var tempName = LeftName.split(\".\");\r\n                                tempName.shift();\r\n                                newNode.type = \"module.exports\";\r\n                                newNode.visibility = \"+\"\r\n                        }\r\n                } else if (node.left.type === \"Identifier\") {\r\n                        var LeftName = node.left.name\r\n                }\r\n                if (node.right.type === \"Literal\") {\r\n                        newNode.group = \"js-variable\";\r\n                        if (node.right.value === null) {\r\n                                newNode.type = \"Null\"\r\n                        } else {\r\n                                newNode.type = typeof node.right.value\r\n                        }\r\n                        newNode.value = node.right.value\r\n                } else if (node.right.type === \"NewExpression\") {\r\n                        if (node.right.callee.type === \"Identifier\" && node.right.callee.name === \"Array\") {\r\n                                newNode.group = \"js-method-call\";\r\n                                newNode.type = \"Array\";\r\n                                if (_.isUndefined(node.right.callee.name) || node.right.callee.name === null) {\r\n                                        newNode.group = \"unknown\";\r\n                                        newNode.name = node.right.callee.name\r\n                                }\r\n                        } else if (node.right.callee.type === \"Identifier\" && node.right.callee.name === \"String\") {\r\n                                newNode.type = \"String\"\r\n                        } else if (node.right.callee.type === \"Identifier\" && node.right.callee.name === \"Number\") {\r\n                                newNode.type = \"Number\"\r\n                        } else if (node.right.callee.type === \"Identifier\" && node.right.callee.name === \"Boolean\") {\r\n                                newNode.type = \"Boolean\"\r\n                        }\r\n                } else if (node.right.type === \"BinaryExpression\") {\r\n                        newNode.group = \"js-variable\";\r\n                        newNode.type = \"BinaryExpression\"\r\n                } else if (node.right.type === \"MemberExpression\") {\r\n                        newNode.group = \"js-object\";\r\n                        RightName = parsersHelper.getLeftName(node.right);\r\n                        newNode.alias = RightName\r\n                } else if (node.right.type === \"Identifier\") {\r\n                        newNode.group = \"js-variable\";\r\n                        RightName = node.right.name;\r\n                        newNode.value = node.right.name;\r\n                        newNode.type = \"Identifier\";\r\n                        newNode.alias = RightName\r\n                } else if (node.right.type === \"CallExpression\" || node.right.type === \"NewExpression\") {\r\n                        newNode.group = \"js-function\";\r\n                        if (node.right.callee.type === \"MemberExpression\") {\r\n                                RightName = parsersHelper.getLeftName(node.right.callee);\r\n                                newNode.alias = RightName\r\n                        } else if (node.right.callee.type === \"Identifier\") {\r\n                                RightName = node.right.callee.name;\r\n                                newNode.alias = RightName\r\n                        }\r\n                }\r\n\r\n                newNode.name = LeftName;\r\n                if (!_.isUndefined(node.left.object) && node.left.object.type === \"ThisExpression\") {\r\n                        newNode.visibility = \"public\"\r\n                }\r\n                if (!_.isUndefined(node.right.arguments) && node.right.arguments.length > 0) {\r\n                        if (node.right.arguments.length === 1) {\r\n                                newNode.value = node.right.arguments[0].value\r\n                        } else {\r\n                                var rawValue = [];\r\n                                _.each(node.right.arguments, function (argument) {\r\n                                        if (!_.isUndefined(argument.name) && argument.name !== \"\") {\r\n                                                rawValue.push(argument.name)\r\n                                        } else if (!_.isUndefined(argument.value) && argument.value !== \"\") {\r\n                                                rawValue.push(argument.value)\r\n                                        }\r\n                                });\r\n                                if (rawValue !== \"\") {\r\n                                        newNode.value = rawValue.join(\", \")\r\n                                }\r\n                        }\r\n                }\r\n                if (!_.isUndefined(node.right.params)) {\r\n                        var rawValue = [];\r\n                        _.each(node.right.params, function (argument) {\r\n                                if (!_.isUndefined(argument.name) && argument.name !== \"\") {\r\n                                        rawValue.push(argument.name)\r\n                                } else if (!_.isUndefined(argument.value) && argument.value !== \"\") {\r\n                                        rawValue.push(argument.value)\r\n                                }\r\n                        });\r\n                        if (rawValue.length > 0) {\r\n                                newNode.value = rawValue.join(\", \")\r\n                        } else {\r\n                                newNode.value = \"\"\r\n                        }\r\n                }\r\n\r\n \r\n\r\n\r\n\r\n\r\n                if (newNode.group === \"js-variable\") {\r\n                        if (newNode.type === \"\") {\r\n                                newNode.type = \"variable\"\r\n                        }\r\n                }\r\n\r\n\r\n\r\n                if (newNode.group === \"js-object\") {\r\n                        newNode.type = \"object\"\r\n                        newNode.visibility = \"public\";\r\n                }\r\n\r\n\r\n                if (newNode.group === \"js-array\") {\r\n                        newNode.type = \"array\";\r\n                }\r\n\r\n                if (newNode.group === \"js-function\") {\r\n                        newNode.kind = \"method\";\r\n\r\n                        if (newNode.value === \"undefined\"){\r\n                                newNode.value = \"\";\r\n                        }\r\n\r\n                }\r\n\r\n                if (newNode.value === undefined){\r\n                        newNode.value = \"\";\r\n                }\r\n                \r\n\r\n                newNode.type = newNode.type.toLowerCase();\r\n\r\n\r\n                return newNode;\r\n        }\r\n\r\n}"]}