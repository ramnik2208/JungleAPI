{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\r\nrequire(\"babel-polyfill\");\r\n//NodeJS dependencies\r\nvar co = require('co');\r\nvar path = require('path');\r\nvar async = require(\"async\");\r\nvar mkdirp = require('mkdirp');\r\nvar getDirName = require('path').dirname;\r\nvar fs = require(\"fs\");\r\nvar _ = require('underscore')._;\r\n\r\n//Wavi local dependencies\r\nvar utils = require(\"./utils/utils\");\r\nvar css_parser = require(\"./parsers/css\");\r\nvar html_parser = require(\"./parsers/html\");\r\nvar javascript_parser = require(\"./parsers/javascript\");\r\nvar graph = require(\"./lib/graph\");\r\nvar db = require(\"./lib/database\");\r\n\r\n\r\n\r\nlet instance = null;\r\n\r\nclass Wavi {\r\n    constructor() {\r\n        if (!instance) {\r\n            instance = this;\r\n        }\r\n\r\n        return instance;\r\n    }\r\n\r\n\r\n    analyze(options, website_folder, website_target) {\r\n\r\n        website_folder = path.resolve(website_folder).replace(/\\\\/g, '\\/');\r\n        website_target = path.resolve(website_target).replace(/\\\\/g, '\\/');\r\n\r\n\r\n        console.log(\"Processing website: \" + website_folder);\r\n\r\n        var identifiedFiles;\r\n\r\n        var WRITE_RESULTS_TO_JSON = false;\r\n\r\n        var WRITE_RESULTS_TO_DOT = false;\r\n\r\n        co(function* () {\r\n\r\n            utils.startTimer();\r\n\r\n            let all_files = yield utils.scanFiles(website_folder, ['js', 'html', 'css']);\r\n\r\n            identifiedFiles = yield instance.indentifyFiles(all_files);\r\n\r\n            db.setIdentifiedFiles(identifiedFiles);\r\n\r\n            let js_files = _.pluck(_.where(db.getClasses(), { type: 'js' }), \"name\");\r\n\r\n            let html_files = _.where(db.getClasses(), { type: 'html' });\r\n\r\n            let css_files = _.where(db.getClasses(), { type: 'css' });\r\n\r\n            yield [css_files.map(css_parser.operation_css), html_files.map(html_parser.operation_html), js_files.map(javascript_parser.operation)];\r\n            let dotResult = graph.createDot(options, db.getClasses(), db.getRelations());\r\n\r\n            if (WRITE_RESULTS_TO_JSON === true) {\r\n                yield [utils.writefile(\"data.json\")(JSON.stringify(db.getClasses(), 0, 4)),\r\n                utils.writefile(\"relations.json\")(JSON.stringify(db.getRelations(), 0, 4))];\r\n            }\r\n\r\n            if (WRITE_RESULTS_TO_DOT === true) {\r\n                try {\r\n                    fs.unlinkSync(\"test.dot\");\r\n                } catch (e) { }\r\n\r\n            }\r\n            console.log(\"finished analyzing, now generating graph\")\r\n\r\n            let resultSvg = graph.generateGraph(dotResult);\r\n\r\n            yield utils.writefile(website_target)(resultSvg);\r\n\r\n\r\n            console.log(\"Graph generated: \" + website_target);\r\n\r\n            utils.stopTimer();\r\n        }).catch(instance.onerror);\r\n\r\n    }\r\n    onerror(err) {\r\n        console.error(err.stack);\r\n    }\r\n\r\n    indentifyFiles(fileList) {\r\n        var newList = [];\r\n        return new Promise((resolve, reject) => {\r\n            var ids = 0;\r\n            _.each(fileList, (item) => {\r\n\r\n\r\n\r\n                //item = utils.correctPathSync(item);\r\n\r\n                //item = path.normalize(item);\r\n\r\n                let color = \"lightyellow\";\r\n                let type = \"js\";\r\n                if (item.slice(-5) === \".html\") {\r\n                    color = \"lightsalmon\";\r\n                    type = \"html\";\r\n                }\r\n                if (item.slice(-4) === \".css\") {\r\n                    color = \"lightgreen\";\r\n                    type = \"css\";\r\n                }\r\n                let id = db.addClass({ name: item, fill: color, type, cluster: \"cluster_\" + ids, is_global: true });\r\n                newList.push({ name: item, id, cluster: \"cluster_\" + ids })\r\n                ids += 1;\r\n            });\r\n            resolve(newList);\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n/*\r\n\r\n\r\n\r\n*/\r\n\r\nmodule.exports = new Wavi();\r\n\r\n\r\n"]}