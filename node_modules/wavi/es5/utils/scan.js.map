{"version":3,"sources":["../../src/utils/scan.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,QAAQ,OAAR,CAAR;IACH,KAAK,QAAQ,IAAR,CAAL;IACC,IAAI,QAAQ,YAAR,EAAsB,CAAtB;IACJ,MAAM,QAAQ,KAAR,CAAN;IACE,OAAO,QAAQ,MAAR,CAAP;;AAEJ,OAAO,OAAP,GAAiB,SAAS,IAAT,CAAc,GAAd,EAAmB,MAAnB,EAA2B,oBAA3B,EAAiD,QAAjD,EAA2D;AAC1E,KAAG,OAAH,CAAW,GAAX,EAAgB,UAAS,GAAT,EAAc,KAAd,EAAqB;AACnC,QAAI,cAAc,EAAd,CAD+B;AAEjC,QAAG,EAAE,WAAF,CAAc,KAAd,KAAwB,KAAxB,EAA8B;AAC/B,YAAM,IAAN,CAAW,KAAX,EAAkB,UAAS,IAAT,EAAe,IAAf,EAAqB;AACrC,YAAI,WAAW,MAAM,GAAN,GAAY,IAAZ,CADsB;AAErC,WAAG,IAAH,CAAQ,QAAR,EAAkB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACpC,cAAI,GAAJ,EAAS;AACP,mBAAO,KAAK,GAAL,CAAP,CADO;WAAT;AAGA,cAAI,KAAK,WAAL,EAAJ,EAAwB;AACtB,gBAAG,wBAAwB,KAAxB,IAAiC,QAAQ,cAAR,EAAuB;AACzD,qBADyD;aAA3D,MAGI;AACF,mBAAK,QAAL,EAAe,MAAf,EAAuB,oBAAvB,EAA6C,UAAS,GAAT,EAAc,OAAd,EAAuB;AAClE,oBAAI,GAAJ,EAAS;AACP,yBAAO,KAAK,GAAL,CAAP,CADO;iBAAT;AAGA,8BAAc,YAAY,MAAZ,CAAmB,OAAnB,CAAd,CAJkE;AAKlE,uBALkE;eAAvB,CAA7C,CADE;aAHJ;WADF,MAcK,IAAI,KAAK,MAAL,EAAJ,EAAmB;AACtB,gBAAG,OAAO,MAAP,KAAkB,QAAlB,EAA2B;AAC5B,kBAAG,KAAK,OAAL,CAAa,GAAb,IAAoB,CAAC,CAAD,EAAG;AACxB,oBAAG,EAAE,QAAF,CAAW,MAAX,EAAmB,KAAK,KAAL,CAAW,GAAX,EAAgB,GAAhB,GAAsB,WAAtB,EAAnB,CAAH,EAA2D;AACzD,sBAAG,SAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,KAA4B,IAA5B,EAAiC;AAClC,+BAAW,SAAS,SAAT,CAAmB,CAAnB,CAAX,CADkC;mBAApC;AAGA,8BAAY,IAAZ,CAAiB,QAAjB,EAJyD;iBAA3D;eADF;aADF,MAUI;AACF,kBAAI,KAAK,OAAL,CAAa,MAAb,EAAqB,KAAK,MAAL,GAAc,OAAO,MAAP,CAAnC,KAAsD,CAAC,CAAD,EAAI;AAC5D,oBAAG,SAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,KAA4B,IAA5B,EAAiC;AAClC,6BAAW,SAAS,SAAT,CAAmB,CAAnB,CAAX,CADkC;iBAApC;AAGA,4BAAY,IAAZ,CAAiB,QAAjB,EAJ4D;eAA9D;aAXF;AAkBA,mBAnBsB;WAAnB;SAlBW,CAAlB,CAFqC;OAArB,EA0Cf,UAAS,GAAT,EAAc;AACf,iBAAS,GAAT,EAAc,WAAd,EADe;OAAd,CA1CH,CAD+B;KAAjC,MA+CI;AACF,eAAS,IAAT,EAAe,EAAf,EADE;KA/CJ;GAFY,CAAhB,CAD0E;CAA3D","file":"scan.js","sourcesContent":["var async = require(\"async\"),\r\n\tfs = require(\"fs\"),\r\n  _ = require('underscore')._,\r\n  url = require(\"url\"),\r\n    path = require(\"path\");\r\n\r\nmodule.exports = function scan(dir, suffix, include_node_modules, callback) {\r\n  fs.readdir(dir, function(err, files) {\r\n    var returnFiles = [];\r\n      if(_.isUndefined(files) == false){\r\n        async.each(files, function(file, next) {\r\n          var filePath = dir + '/' + file;\r\n          fs.stat(filePath, function(err, stat) {\r\n            if (err) {\r\n              return next(err);\r\n            }\r\n            if (stat.isDirectory()) {\r\n              if(include_node_modules == false && file == \"node_modules\"){\r\n                next();\r\n              }\r\n              else{\r\n                scan(filePath, suffix, include_node_modules, function(err, results) {\r\n                  if (err) {\r\n                    return next(err);\r\n                  }\r\n                  returnFiles = returnFiles.concat(results);\r\n                  next();\r\n                })\r\n              }\r\n            }\r\n            else if (stat.isFile()) {\r\n              if(typeof suffix !== 'string'){\r\n                if(file.indexOf(\".\") > -1){\r\n                  if(_.contains(suffix, file.split(\".\").pop().toLowerCase())){\r\n                    if(filePath.substring(0, 2) == \"./\"){\r\n                      filePath = filePath.substring(2);\r\n                    }\r\n                    returnFiles.push(filePath);\r\n                  }\r\n                }\r\n              }\r\n              else{\r\n                if (file.indexOf(suffix, file.length - suffix.length) !== -1) {\r\n                  if(filePath.substring(0, 2) == \"./\"){\r\n                    filePath = filePath.substring(2);\r\n                  }\r\n                  returnFiles.push(filePath);\r\n                }\r\n              }\r\n              next();\r\n            }\r\n            });\r\n        }, function(err) {\r\n          callback(err, returnFiles);\r\n        });\r\n      }\r\n      else{\r\n        callback(null, \"\"); \r\n      }\r\n  });\r\n};"]}